// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  name          String
  phoneNumber   String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  blogs         Blog[]
  comments      Comment[]
  description   String?
  profileImageUrl String?
  githubLink    String?
  linkedinLink  String?
  twitterLink   String?
  instagramLink String?
  aboutMe       String?
}

model Blog {
  id            Int       @id @default(autoincrement())
  title         String
  content       String
  coverImageUrl String?   // New field for cover image URL
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt   
  author        User      @relation(fields: [authorId], references: [id])
  authorId      Int       
  comments      Comment[] 
  tags          String[]  @default([])
  isDraft       Boolean   @default(false)
  preview       String
}

model Comment {
  id            Int       @id @default(autoincrement())
  content       String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  author        User      @relation(fields: [authorId], references: [id])
  authorId      Int
  blog          Blog      @relation(fields: [blogId], references: [id])
  blogId        Int
  parent        Comment?  @relation("CommentToComment", fields: [parentId], references: [id])
  parentId      Int?
  children      Comment[] @relation("CommentToComment")
}


